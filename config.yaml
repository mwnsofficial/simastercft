port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7895
mode: script
log-level: info
allow-lan: true
external-controller: 0.0.0.0:9090
secret : ""
bind-address: "*"
external-ui: yacd-gh-pages
dns:
  enable: true
  ipv6: false
  enhanced-mode: fake-ip
  listen: 127.0.0.1:7894
  use-hosts: true
  nameserver:
    - 8.8.8.8
    - 1.1.1.1
    - https://dns.google/dns-query
    - tls://dns.google
    - https://cloudflare-dns.com/dns-query
    - tls://1dot1dot1dot1.cloudflare-dns.com
  fallback:
    - https://dns.google/dns-query
    - tls://dns.google
proxy-providers:
  Simcard:
    type: file
    path: "./simcard.yaml"
    health-check:
      enable: false
      url: http://www.gstatic.com/generate_204
      interval: 300     
#Gunakan tanda pagar menghiden, jika salah satu server tidak kepakai
proxy-groups:
- name: SIMASTER
  type: select
  disable-udp: false
  proxies:
    - SELECT
    - PING
    - FALLBACK
    - LOADBALANCE
    - RELAY
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: SELECT
  type: select
  disable-udp: false
  use:
    - Simcard
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: PING
  type: url-test
  disable-udp: false
  use:
    - Simcard
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: FALLBACK
  type: fallback
  disable-udp: false
  use:
    - Simcard
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: LOADBALANCE
  type: load-balance
  strategy: consistent-hashing
  disable-udp: false
  use:
    - Simcard
  url: http://www.gstatic.com/generate_204
  interval: '99'
- name: RELAY
  type: relay
  disable-udp: false
  use:
    - Simcard
  url: http://www.gstatic.com/generate_204
  interval: '99'
script:
  code: |
    def main(ctx, metadata):
        port = int(metadata["dst_port"])

        if metadata["network"] == "UDP":
            if port == "21,22,23,53,80,443,8443":
                ctx.log('[Script] matched QUIC traffic use SIMASTER')
                return "SIMASTER"

        if metadata["dst_ip"] == "":
            metadata["dst_ip"] = ctx.resolve_ip(metadata["host"])

        port_list = [21, 22, 23, 53, 80, 81, 123, 443, 853, 5353, 8000, 8008, 8080, 8081, 8090, 8443, 8888, 9993]
        if port not in port_list:
            ctx.log('[Script] not common port use SIMASTER')
            return "SIMASTER"

        if metadata["dst_ip"] == "":
            return "DIRECT"

        ctx.log('[Script] SIMASTER')
        return "SIMASTER"
rules:
- MATCH,SIMASTER
tun:
  enable: true
  stack: system
  auto-route: false
  auto-detect-interface: false
  dns-hijack:
  - tcp://any:53
profile:
  store-selected: true
  store-fake-ip: true
